using System;
using System.IO;
using System.IO.Compression;

/*
* This program decompresses *.dsor or *.dsox files generated by Microsoft Spectrum Observatory and outputs 
* Google Protobuffer data files. The outputted file can be further processed by using python scripts rawIQ_process.py or psdFile_process.py.
* It can be built and executed using .NET or Mono C# compiler. (Verified with Ubuntu 16.04 Mono compiler package)
* 
* Usage : mono decompress.exe target_file output_file (Unix + Mono)
*         decompress.exe target_file output_file (Windows)
* *** If output path is not specified, it will simply append ".uncompressed" to the end of the file name.
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* Codes heavily based on https://msdn.microsoft.com/en-us/library/system.io.compression.deflatestream(v=vs.110).aspx?cs-save-lang=1&cs-lang=csharp#code-snippet-2
* (Some copy & pastes involved.) Related license: https://msdn.microsoft.com/en-us/cc300389.aspx
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*
*Last-modified: Oct 10, 2016 (Kyeong Su Shin)
*
*/

public class Program
{
	//Main routine
	//Input : command arguments.
	//Returns : non-zero numbers if error(s) occured. zero otherwise.
    public static int Main(string[] args)
    {
		
		//sanity-check the input arguments.
		//wrong arguments
		if (args.Length < 1){
			System.Console.WriteLine("Usage : decompress.exe target_path (required) output_path (optional). ");
			return 1;
		}

		//target file existence check
		if(!File.Exists(args[0])){
			System.Console.WriteLine("Target file does not exist. :( ");
			return 2;
		}
		
		string outloc = args[0] + ".uncompressed";
		//Determine output path
		if (args.Length ==2){
			outloc = args[1];
		}

		//if output path equals a pre-existing directory, file cannot be outputted properly.
		if(Directory.Exists(outloc)){
			System.Console.WriteLine("Destination name already used. Please delete use different output file name or delete the preexisting file and retry.");
			return 3;
		}
		
		//Load file
		FileInfo file = new FileInfo(args[0]);

		//Decompress, write.
		try{
			Decompress(file,outloc);
			System.Console.WriteLine("Done. Normal exit");
		}
		catch (Exception e){
			System.Console.WriteLine("Exception Thrown:");
			System.Console.WriteLine("----------------------------------------");
			System.Console.WriteLine(e.ToString());
			System.Console.WriteLine("----------------------------------------");
			System.Console.WriteLine("(Frequent causes: wrong path, file corruption, etc.)");
			return 4;
		}

		//Done
		return 0;
    }

	//"Decompress" method Copied from MSDN site. (not mine!)
	//Decompresses a file, and saves it into a new file.
	//Input:
	//FileInfo fileToDecompress : Target file to decompress
	//string newFileName : File Output path
	//Returns : none
	//Copied from MSDN site.
    public static void Decompress(FileInfo fileToDecompress, string newFileName)
    {
		//Open file.
        using (FileStream originalFileStream = fileToDecompress.OpenRead())
        {
            string currentFileName = fileToDecompress.FullName;
            //string newFileName = currentFileName.Remove(currentFileName.Length - fileToDecompress.Extension.Length);
		
            using (FileStream decompressedFileStream = File.Create(newFileName))
        	{
                using (DeflateStream decompressionStream = new DeflateStream(originalFileStream, CompressionMode.Decompress))
        	    {
                    decompressionStream.CopyTo(decompressedFileStream);
                    Console.WriteLine("Decompressed: {0}", fileToDecompress.Name);
        	    }
        	}
        }
    }
}
