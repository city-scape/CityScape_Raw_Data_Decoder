#!/usr/bin/env python
import zlib
import sys
import os.path

'''
* This program decompresses *.dsor or *.dsox files generated by Microsoft Spectrum Observatory and outputs 
* Google Protobuffer data files. The outputted file can be further processed by using python scripts rawIQ_process.py or psdFile_process.py.
* 
* Usage : decompress.py target_file output_file(optional)
* *** If output path is not specified, it will simply append ".uncompressed" to the end of the file name.
*
*Last-modified: Mar 24, 2017 (Kyeong Su Shin)
'''

#Decompress function
def decompress (dat):
	return zlib.decompress(dat,-15)

#Check Args length
if len(sys.argv) < 2:
	print "Usage : decompress.py target_path (required) output_path (optional). "
	sys.exit()

#Check if the first argument (except the script name) is a file.
if not os.path.isfile(sys.argv[1]):
	print "Error: Target file not found."
	sys.exit()

#Determine the output path.
out_path = sys.argv[1] + ".uncompressed"
if len(sys.argv) > 2:
	out_path = sys.argv[2]

#Check if the output path conflicts with a directory name.
if os.path.isdir(out_path):
	print "Error: There is a directory named " + out_path +". Cannot create the output file."
	sys.exit()

#Try decompression.
try:
	#Open, Decompress
	f = open(sys.argv[1],"rb")
	decompress_out = decompress (f.read())
	f.close()
	#Write result.
	f_out = open(out_path,"wb")
	f_out.write(decompress_out)
	f_out.close()

#Exception - most likely due to wrong file type.
except Exception as res:
	print "Error:", res
	print "(Frequent causes: wrong path, file corruption, etc.)"
	raise

